{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/erxes/work/erxes-client-portal/client/components/task/components/Item.tsx\";\nimport React from 'react';\nimport { ItemWrapper, Content } from \"../../styles/tasks\";\n\nfunction ItemContainer({\n  loading,\n  tasks\n}) {\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  return tasks.map(task => {\n    return /*#__PURE__*/_jsxDEV(ItemWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  });\n}\n\n_c = ItemContainer;\nexport default ItemContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemContainer\");","map":{"version":3,"sources":["/home/erxes/work/erxes-client-portal/client/components/task/components/Item.tsx"],"names":["React","ItemWrapper","Content","ItemContainer","loading","tasks","map","task","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,OAAtB;;AAOA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAvB,EAAkD;AAChD,MAAID,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SAAOC,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AACvB,wBACE,QAAC,WAAD;AAAA,6BACE,QAAC,OAAD;AAAA,+BACE;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GARM,CAAP;AASD;;KAdQL,a;AAgBT,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { ItemWrapper, Content } from '../../styles/tasks';\n\ntype Props = {\n  loading: boolean;\n  tasks: any;\n};\n\nfunction ItemContainer({ loading, tasks }: Props) {\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return tasks.map(task => {\n    return (\n      <ItemWrapper>\n        <Content>\n          <h5>{task.name}</h5>\n        </Content>\n      </ItemWrapper>\n    );\n  });\n}\n\nexport default ItemContainer;\n"]},"metadata":{},"sourceType":"module"}