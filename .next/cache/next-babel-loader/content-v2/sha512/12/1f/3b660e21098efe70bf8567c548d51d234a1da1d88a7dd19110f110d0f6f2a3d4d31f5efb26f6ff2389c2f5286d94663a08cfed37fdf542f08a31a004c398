{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { SearchContainer } from '../../styles/main';\nimport Icon from '../../common/Icon';\n\nvar Search = /*#__PURE__*/function (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  var _super = _createSuper(Search);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        searchValue: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSearch\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyDown\", function (e) {});\n\n    _defineProperty(_assertThisInitialized(_this), \"clearSearch\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"renderClearButton\", function () {\n      var searchValue = _this.state.searchValue;\n\n      if (searchValue) {\n        return /*#__PURE__*/_jsx(\"div\", {\n          className: \"clear-icon\",\n          children: /*#__PURE__*/_jsx(\"i\", {\n            className: \"close\",\n            onClick: _this.clearSearch,\n            children: \"\\xD7\"\n          })\n        });\n      }\n\n      return null;\n    });\n\n    var _searchValue = props.searchValue;\n    _this.state = {\n      searchValue: _searchValue || ''\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var searchValue = props.searchValue;\n      this.setState({\n        searchValue: searchValue || ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var searchValue = this.state.searchValue;\n      return /*#__PURE__*/_jsxs(SearchContainer, {\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          onChange: this.onChange,\n          placeholder: \"Search for articles...\",\n          value: searchValue,\n          onKeyDown: this.onKeyDown\n        }), /*#__PURE__*/_jsx(Icon, {\n          icon: \"search\",\n          onClick: this.onSearch\n        }), this.renderClearButton()]\n      });\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport { Search as default };","map":null,"metadata":{},"sourceType":"module"}