{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/erxes/work/client/components/knowledgeBase/containers/ArticleDetail.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { gql, useQuery } from '@apollo/client';\nimport React from 'react';\nimport ArticleDetail from \"../components/ArticleDetail\";\nimport { articleDetailQuery } from \"../graphql/queries\";\n\nfunction ArticleDetailContainer(_ref) {\n  _s();\n\n  let queryParams = _ref.queryParams,\n      props = _objectWithoutProperties(_ref, [\"queryParams\"]);\n\n  const id = queryParams.id;\n\n  const _ref2 = id ? useQuery(gql(articleDetailQuery), {\n    variables: {\n      _id: id\n    }\n  }) : {\n    loading: true\n  },\n        loading = _ref2.loading,\n        _ref2$data = _ref2.data,\n        data = _ref2$data === void 0 ? {} : _ref2$data;\n\n  const article = data.knowledgeBaseArticleDetail || {};\n\n  const updatedProps = _objectSpread(_objectSpread({}, props), {}, {\n    loading,\n    article\n  });\n\n  return /*#__PURE__*/_jsxDEV(ArticleDetail, _objectSpread({}, updatedProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ArticleDetailContainer, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\n_c = ArticleDetailContainer;\nexport default ArticleDetailContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleDetailContainer\");","map":{"version":3,"sources":["/home/erxes/work/client/components/knowledgeBase/containers/ArticleDetail.tsx"],"names":["gql","useQuery","React","ArticleDetail","articleDetailQuery","ArticleDetailContainer","queryParams","props","id","variables","_id","loading","data","article","knowledgeBaseArticleDetail","updatedProps"],"mappings":";;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP;AACA,SAASC,kBAAT;;AAMA,SAASC,sBAAT,OAAkE;AAAA;;AAAA,MAAhCC,WAAgC,QAAhCA,WAAgC;AAAA,MAAhBC,KAAgB;;AAAA,QACxDC,EADwD,GACjDF,WADiD,CACxDE,EADwD;;AAAA,gBAGjCA,EAAE,GAC7BP,QAAQ,CAACD,GAAG,CAACI,kBAAD,CAAJ,EAA0B;AAChCK,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEF;AAAP;AADqB,GAA1B,CADqB,GAI7B;AAAEG,IAAAA,OAAO,EAAE;AAAX,GAP4D;AAAA,QAGxDA,OAHwD,SAGxDA,OAHwD;AAAA,2BAG/CC,IAH+C;AAAA,QAG/CA,IAH+C,2BAGxC,EAHwC;;AAShE,QAAMC,OAAO,GAAGD,IAAI,CAACE,0BAAL,IAAmC,EAAnD;;AAEA,QAAMC,YAAY,mCACbR,KADa;AAEhBI,IAAAA,OAFgB;AAGhBE,IAAAA;AAHgB,IAAlB;;AAMA,sBAAO,QAAC,aAAD,oBAAmBE,YAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAlBQV,sB;UAIHJ,Q;;;KAJGI,sB;AAoBT,eAAeA,sBAAf","sourcesContent":["import { gql, useQuery } from '@apollo/client';\nimport React from 'react';\nimport ArticleDetail from '../components/ArticleDetail';\nimport { articleDetailQuery } from '../graphql/queries';\n\ntype Props = {\n  queryParams: any;\n};\n\nfunction ArticleDetailContainer({ queryParams, ...props }: Props) {\n  const { id } = queryParams;\n\n  const { loading, data = {} } = id\n    ? useQuery(gql(articleDetailQuery), {\n        variables: { _id: id }\n      })\n    : { loading: true };\n\n  const article = data.knowledgeBaseArticleDetail || {};\n\n  const updatedProps = {\n    ...props,\n    loading,\n    article\n  };\n\n  return <ArticleDetail {...updatedProps} />;\n}\n\nexport default ArticleDetailContainer;\n"]},"metadata":{},"sourceType":"module"}