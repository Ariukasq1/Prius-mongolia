{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/erxes/work/client/components/knowledgeBase/containers/ArticleDetail.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { gql, useQuery } from '@apollo/client';\nimport React from 'react';\nimport ArticleDetail from \"../components/ArticleDetail\";\nimport { articleDetailQuery } from \"../graphql/queries\";\n\nfunction ArticleDetailContainer(_ref) {\n  let {\n    queryParams\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"queryParams\"]);\n\n  const {\n    id\n  } = queryParams;\n  const {\n    loading,\n    data = {}\n  } = id ? useQuery(gql(articleDetailQuery), {\n    variables: {\n      _id: id\n    }\n  }) : {\n    loading: true\n  };\n  const article = data.knowledgeBaseArticleDetail || {};\n\n  const updatedProps = _objectSpread(_objectSpread({}, props), {}, {\n    loading,\n    article\n  });\n\n  return /*#__PURE__*/_jsxDEV(ArticleDetail, _objectSpread({}, updatedProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n\nexport default ArticleDetailContainer;","map":{"version":3,"sources":["/home/erxes/work/client/components/knowledgeBase/containers/ArticleDetail.tsx"],"names":["gql","useQuery","React","ArticleDetail","articleDetailQuery","ArticleDetailContainer","queryParams","props","id","loading","data","variables","_id","article","knowledgeBaseArticleDetail","updatedProps"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP;AACA,SAASC,kBAAT;;AAMA,SAASC,sBAAT,OAAkE;AAAA,MAAlC;AAAEC,IAAAA;AAAF,GAAkC;AAAA,MAAhBC,KAAgB;;AAChE,QAAM;AAAEC,IAAAA;AAAF,MAASF,WAAf;AAEA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,IAAI,GAAG;AAAlB,MAAyBF,EAAE,GAC7BP,QAAQ,CAACD,GAAG,CAACI,kBAAD,CAAJ,EAA0B;AAChCO,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEJ;AAAP;AADqB,GAA1B,CADqB,GAI7B;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAJJ;AAMA,QAAMI,OAAO,GAAGH,IAAI,CAACI,0BAAL,IAAmC,EAAnD;;AAEA,QAAMC,YAAY,mCACbR,KADa;AAEhBE,IAAAA,OAFgB;AAGhBI,IAAAA;AAHgB,IAAlB;;AAMA,sBAAO,QAAC,aAAD,oBAAmBE,YAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,eAAeV,sBAAf","sourcesContent":["import { gql, useQuery } from '@apollo/client';\nimport React from 'react';\nimport ArticleDetail from '../components/ArticleDetail';\nimport { articleDetailQuery } from '../graphql/queries';\n\ntype Props = {\n  queryParams: any;\n};\n\nfunction ArticleDetailContainer({ queryParams, ...props }: Props) {\n  const { id } = queryParams;\n\n  const { loading, data = {} } = id\n    ? useQuery(gql(articleDetailQuery), {\n        variables: { _id: id }\n      })\n    : { loading: true };\n\n  const article = data.knowledgeBaseArticleDetail || {};\n\n  const updatedProps = {\n    ...props,\n    loading,\n    article\n  };\n\n  return <ArticleDetail {...updatedProps} />;\n}\n\nexport default ArticleDetailContainer;\n"]},"metadata":{},"sourceType":"module"}