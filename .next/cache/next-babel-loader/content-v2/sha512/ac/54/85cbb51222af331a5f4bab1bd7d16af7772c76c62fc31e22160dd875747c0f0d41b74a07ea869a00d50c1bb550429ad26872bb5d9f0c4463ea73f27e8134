{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/erxes/work/erxes-client-portal/client/components/knowledgeBase/containers/CategoryDetail.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { gql, useQuery } from '@apollo/client';\nimport React from 'react';\nimport { AppConsumer } from \"../../appContext\";\nimport CategoryDetail from \"../components/CategoryDetail\";\nimport { categoryDetailQuery } from \"../graphql/queries\";\n\nfunction CategoryDetailContainer(_ref) {\n  let {\n    categoryId\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"categoryId\"]);\n\n  const {\n    loading,\n    data = {}\n  } = useQuery(gql(categoryDetailQuery), {\n    variables: {\n      _id: categoryId\n    }\n  });\n  const category = data.knowledgeBaseCategoryDetail || {};\n\n  const updatedProps = _objectSpread(_objectSpread({}, props), {}, {\n    loading,\n    category\n  });\n\n  return /*#__PURE__*/_jsxDEV(CategoryDetail, _objectSpread({}, updatedProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n}\n\nconst WithConsumer = props => {\n  return /*#__PURE__*/_jsxDEV(AppConsumer, {\n    children: ({\n      topic\n    }) => {\n      return /*#__PURE__*/_jsxDEV(CategoryDetailContainer, _objectSpread(_objectSpread({}, props), {}, {\n        topic: topic\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\nexport default WithConsumer;","map":{"version":3,"sources":["/home/erxes/work/erxes-client-portal/client/components/knowledgeBase/containers/CategoryDetail.tsx"],"names":["gql","useQuery","React","AppConsumer","CategoryDetail","categoryDetailQuery","CategoryDetailContainer","categoryId","props","loading","data","variables","_id","category","knowledgeBaseCategoryDetail","updatedProps","WithConsumer","topic"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT;AAEA,OAAOC,cAAP;AACA,SAASC,mBAAT;;AAOA,SAASC,uBAAT,OAAkE;AAAA,MAAjC;AAAEC,IAAAA;AAAF,GAAiC;AAAA,MAAhBC,KAAgB;;AAChE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,GAAG;AAAlB,MAAyBT,QAAQ,CAACD,GAAG,CAACK,mBAAD,CAAJ,EAA2B;AAChEM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEL;AAAP;AADqD,GAA3B,CAAvC;AAIA,QAAMM,QAAQ,GAAGH,IAAI,CAACI,2BAAL,IAAoC,EAArD;;AAEA,QAAMC,YAAY,mCACbP,KADa;AAEhBC,IAAAA,OAFgB;AAGhBI,IAAAA;AAHgB,IAAlB;;AAMA,sBAAO,QAAC,cAAD,oBAAoBE,YAApB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,MAAMC,YAAY,GAAGR,KAAK,IAAI;AAC5B,sBACE,QAAC,WAAD;AAAA,cACG,CAAC;AAAES,MAAAA;AAAF,KAAD,KAAiC;AAChC,0BAAO,QAAC,uBAAD,kCAA6BT,KAA7B;AAAoC,QAAA,KAAK,EAAES;AAA3C;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CARD;;AAUA,eAAeD,YAAf","sourcesContent":["import { gql, useQuery } from '@apollo/client';\nimport React from 'react';\nimport { AppConsumer } from '../../appContext';\nimport { Topic } from '../../types';\nimport CategoryDetail from '../components/CategoryDetail';\nimport { categoryDetailQuery } from '../graphql/queries';\n\ntype Props = {\n  queryParams: any;\n  topic: Topic;\n};\n\nfunction CategoryDetailContainer({ categoryId, ...props }: Props) {\n  const { loading, data = {} } = useQuery(gql(categoryDetailQuery), {\n    variables: { _id: categoryId }\n  });\n\n  const category = data.knowledgeBaseCategoryDetail || {};\n\n  const updatedProps = {\n    ...props,\n    loading,\n    category\n  };\n\n  return <CategoryDetail {...updatedProps} />;\n}\n\nconst WithConsumer = props => {\n  return (\n    <AppConsumer>\n      {({ topic }: { topic: Topic }) => {\n        return <CategoryDetailContainer {...props} topic={topic} />;\n      }}\n    </AppConsumer>\n  );\n};\n\nexport default WithConsumer;\n"]},"metadata":{},"sourceType":"module"}