{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/erxes/work/client/components/main/components/Search.tsx\";\nimport React from 'react';\nimport { SearchContainer } from \"../../styles/main\";\nimport Icon from \"../../common/Icon\";\nexport default class Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onChange\", e => {\n      const value = e.target.value;\n      this.setState({\n        searchValue: value\n      });\n    });\n\n    _defineProperty(this, \"onSearch\", () => {});\n\n    _defineProperty(this, \"onKeyDown\", e => {});\n\n    _defineProperty(this, \"clearSearch\", () => {});\n\n    const searchValue = props.searchValue;\n    this.state = {\n      searchValue: searchValue || ''\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    const searchValue = props.searchValue;\n    this.setState({\n      searchValue: searchValue || ''\n    });\n  }\n\n  render() {\n    const searchValue = this.state.searchValue;\n    return /*#__PURE__*/_jsxDEV(SearchContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        icon: \"search\",\n        onClick: this.onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), searchValue && /*#__PURE__*/_jsxDEV(Icon, {\n        icon: \"times-circle\",\n        onClick: this.clearSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: this.onChange,\n        placeholder: \"Search for articles...\",\n        value: searchValue,\n        onKeyDown: this.onKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/erxes/work/client/components/main/components/Search.tsx"],"names":["React","SearchContainer","Icon","Search","Component","constructor","props","e","value","target","setState","searchValue","state","componentWillReceiveProps","render","onSearch","clearSearch","onChange","onKeyDown"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT;AACA,OAAOC,IAAP;AAQA,eAAe,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAmD;AAChEC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,sCAkBRC,CAAC,IAAI;AACd,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AAEA,WAAKE,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEH;AADD,OAAd;AAGD,KAxBkB;;AAAA,sCA0BR,MAAM,CAAE,CA1BA;;AAAA,uCA4BPD,CAAC,IAAI,CAAE,CA5BA;;AAAA,yCA8BL,MAAM,CAAE,CA9BH;;AAAA,UAGTI,WAHS,GAGOL,KAHP,CAGTK,WAHS;AAKjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,WAAW,EAAEA,WAAW,IAAI;AADjB,KAAb;AAGD;;AAEDE,EAAAA,yBAAyB,CAACP,KAAD,EAAQ;AAAA,UACvBK,WADuB,GACPL,KADO,CACvBK,WADuB;AAG/B,SAAKD,QAAL,CAAc;AACZC,MAAAA,WAAW,EAAEA,WAAW,IAAI;AADhB,KAAd;AAGD;;AAgBDG,EAAAA,MAAM,GAAG;AAAA,UACCH,WADD,GACiB,KAAKC,KADtB,CACCD,WADD;AAGP,wBACE,QAAC,eAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAoB,QAAA,OAAO,EAAE,KAAKI;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,EAGGJ,WAAW,iBAAI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,cAAX;AAA0B,QAAA,OAAO,EAAE,KAAKK;AAAxC;AAAA;AAAA;AAAA;AAAA,cAHlB,eAKE;AACE,QAAA,QAAQ,EAAE,KAAKC,QADjB;AAEE,QAAA,WAAW,EAAC,wBAFd;AAGE,QAAA,KAAK,EAAEN,WAHT;AAIE,QAAA,SAAS,EAAE,KAAKO;AAJlB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAlD+D","sourcesContent":["import React from 'react';\nimport { SearchContainer } from '../../styles/main';\nimport Icon from '../../common/Icon';\n\ntype Props = {};\n\ntype State = {\n  searchValue: string;\n};\n\nexport default class Search extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    const { searchValue } = props;\n\n    this.state = {\n      searchValue: searchValue || ''\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    const { searchValue } = props;\n\n    this.setState({\n      searchValue: searchValue || ''\n    });\n  }\n\n  onChange = e => {\n    const value = e.target.value;\n\n    this.setState({\n      searchValue: value\n    });\n  };\n\n  onSearch = () => {};\n\n  onKeyDown = e => {};\n\n  clearSearch = () => {};\n\n  render() {\n    const { searchValue } = this.state;\n\n    return (\n      <SearchContainer>\n        <Icon icon=\"search\" onClick={this.onSearch} />\n\n        {searchValue && <Icon icon=\"times-circle\" onClick={this.clearSearch} />}\n\n        <input\n          onChange={this.onChange}\n          placeholder=\"Search for articles...\"\n          value={searchValue}\n          onKeyDown={this.onKeyDown}\n        />\n      </SearchContainer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}