{"ast":null,"code":"import { Schema } from 'mongoose';\nimport { field } from \"./utils\";\nexport const userSchema = new Schema({\n  createdAt: field({\n    type: Date,\n    default: Date.now\n  }),\n  firstName: field({\n    type: String\n  }),\n  lastName: field({\n    type: String,\n    optional: true\n  }),\n  password: field({\n    type: String\n  }),\n  resetPasswordToken: field({\n    type: String,\n    optional: true\n  }),\n  registrationToken: field({\n    type: String,\n    optional: true\n  }),\n  registrationTokenExpires: field({\n    type: Date,\n    optional: true\n  }),\n  resetPasswordExpires: field({\n    type: Date,\n    optional: true\n  }),\n  email: field({\n    type: String,\n    unique: true,\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,10})+$/, 'Please fill a valid email address'],\n    label: 'Email'\n  })\n});","map":{"version":3,"sources":["/home/erxes/work/client/pages/api/db/models/definitions.ts"],"names":["Schema","field","userSchema","createdAt","type","Date","default","now","firstName","String","lastName","optional","password","resetPasswordToken","registrationToken","registrationTokenExpires","resetPasswordExpires","email","unique","match","label"],"mappings":"AAAA,SAAmBA,MAAnB,QAAiC,UAAjC;AAEA,SAASC,KAAT;AAkBA,OAAO,MAAMC,UAAU,GAAG,IAAIF,MAAJ,CAAsC;AAC9DG,EAAAA,SAAS,EAAEF,KAAK,CAAC;AACfG,IAAAA,IAAI,EAAEC,IADS;AAEfC,IAAAA,OAAO,EAAED,IAAI,CAACE;AAFC,GAAD,CAD8C;AAK9DC,EAAAA,SAAS,EAAEP,KAAK,CAAC;AAAEG,IAAAA,IAAI,EAAEK;AAAR,GAAD,CAL8C;AAM9DC,EAAAA,QAAQ,EAAET,KAAK,CAAC;AAAEG,IAAAA,IAAI,EAAEK,MAAR;AAAgBE,IAAAA,QAAQ,EAAE;AAA1B,GAAD,CAN+C;AAO9DC,EAAAA,QAAQ,EAAEX,KAAK,CAAC;AAAEG,IAAAA,IAAI,EAAEK;AAAR,GAAD,CAP+C;AAQ9DI,EAAAA,kBAAkB,EAAEZ,KAAK,CAAC;AAAEG,IAAAA,IAAI,EAAEK,MAAR;AAAgBE,IAAAA,QAAQ,EAAE;AAA1B,GAAD,CARqC;AAS9DG,EAAAA,iBAAiB,EAAEb,KAAK,CAAC;AAAEG,IAAAA,IAAI,EAAEK,MAAR;AAAgBE,IAAAA,QAAQ,EAAE;AAA1B,GAAD,CATsC;AAU9DI,EAAAA,wBAAwB,EAAEd,KAAK,CAAC;AAAEG,IAAAA,IAAI,EAAEC,IAAR;AAAcM,IAAAA,QAAQ,EAAE;AAAxB,GAAD,CAV+B;AAW9DK,EAAAA,oBAAoB,EAAEf,KAAK,CAAC;AAAEG,IAAAA,IAAI,EAAEC,IAAR;AAAcM,IAAAA,QAAQ,EAAE;AAAxB,GAAD,CAXmC;AAY9DM,EAAAA,KAAK,EAAEhB,KAAK,CAAC;AACXG,IAAAA,IAAI,EAAEK,MADK;AAEXS,IAAAA,MAAM,EAAE,IAFG;AAGXC,IAAAA,KAAK,EAAE,CACL,gDADK,EAEL,mCAFK,CAHI;AAOXC,IAAAA,KAAK,EAAE;AAPI,GAAD;AAZkD,CAAtC,CAAnB","sourcesContent":["import { Document, Schema } from 'mongoose';\nimport { IUserModel } from './Users';\nimport { field } from './utils';\n\nexport interface IUser {\n  createdAt?: Date;\n  password: string;\n  resetPasswordToken?: string;\n  resetPasswordExpires?: number;\n  registrationToken?: string;\n  registrationTokenExpires?: Date;\n  email?: string;\n  firstName?: string;\n  lastName?: string;\n}\n\nexport interface IUserDocument extends IUser, Document {\n  _id: string;\n}\n\nexport const userSchema = new Schema<IUserDocument, IUserModel>({\n  createdAt: field({\n    type: Date,\n    default: Date.now\n  }),\n  firstName: field({ type: String }),\n  lastName: field({ type: String, optional: true }),\n  password: field({ type: String }),\n  resetPasswordToken: field({ type: String, optional: true }),\n  registrationToken: field({ type: String, optional: true }),\n  registrationTokenExpires: field({ type: Date, optional: true }),\n  resetPasswordExpires: field({ type: Date, optional: true }),\n  email: field({\n    type: String,\n    unique: true,\n    match: [\n      /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,10})+$/,\n      'Please fill a valid email address'\n    ],\n    label: 'Email'\n  })\n});\n"]},"metadata":{},"sourceType":"module"}