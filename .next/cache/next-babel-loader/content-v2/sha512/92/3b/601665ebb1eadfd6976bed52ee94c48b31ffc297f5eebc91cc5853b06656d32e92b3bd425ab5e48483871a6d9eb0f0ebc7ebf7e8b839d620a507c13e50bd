{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/erxes/work/erxes-client-portal/client/components/task/containers/Item.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { gql, useQuery } from '@apollo/client';\nimport React from 'react';\nimport { getTasks } from \"../../../pages/api/resolvers/config\";\nimport Item from \"../components/Item\";\n\nfunction ItemContainer(_ref) {\n  _s();\n\n  let {\n    stageId\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"stageId\"]);\n\n  const {\n    loading,\n    data = {}\n  } = useQuery(gql(getTasks), {\n    variables: {\n      stageId\n    },\n    skip: !stageId\n  });\n  const tasks = data.getTasks || [];\n\n  const updatedProps = _objectSpread(_objectSpread({}, props), {}, {\n    tasks,\n    loading\n  });\n\n  return /*#__PURE__*/_jsxDEV(Item, _objectSpread({}, updatedProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ItemContainer, \"+DbGrwSDgFnPDXp1gYUwMeHyJL0=\", false, function () {\n  return [useQuery];\n});\n\n_c = ItemContainer;\nexport default ItemContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemContainer\");","map":{"version":3,"sources":["/home/erxes/work/erxes-client-portal/client/components/task/containers/Item.tsx"],"names":["gql","useQuery","React","getTasks","Item","ItemContainer","stageId","props","loading","data","variables","skip","tasks","updatedProps"],"mappings":";;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT;AACA,OAAOC,IAAP;;AAMA,SAASC,aAAT,OAAqD;AAAA;;AAAA,MAA9B;AAAEC,IAAAA;AAAF,GAA8B;AAAA,MAAhBC,KAAgB;;AACnD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,GAAG;AAAlB,MAAyBR,QAAQ,CAACD,GAAG,CAACG,QAAD,CAAJ,EAAgB;AACrDO,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF,KAD0C;AAErDK,IAAAA,IAAI,EAAE,CAACL;AAF8C,GAAhB,CAAvC;AAKA,QAAMM,KAAK,GAAGH,IAAI,CAACN,QAAL,IAAiB,EAA/B;;AAEA,QAAMU,YAAY,mCACbN,KADa;AAEhBK,IAAAA,KAFgB;AAGhBJ,IAAAA;AAHgB,IAAlB;;AAMA,sBACE,QAAC,IAAD,oBAAUK,YAAV;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAjBQR,a;UACwBJ,Q;;;KADxBI,a;AAmBT,eAAeA,aAAf","sourcesContent":["import { gql, useQuery } from '@apollo/client';\nimport React from 'react';\nimport { getTasks } from '../../../pages/api/resolvers/config';\nimport Item from '../components/Item';\n\ntype Props = {\n  stageId: string;\n};\n\nfunction ItemContainer({ stageId, ...props }: Props) {\n  const { loading, data = {} } = useQuery(gql(getTasks), {\n    variables: { stageId },\n    skip: !stageId\n  });\n\n  const tasks = data.getTasks || [];\n\n  const updatedProps = {\n    ...props,\n    tasks,\n    loading\n  };\n\n  return (\n    <Item {...updatedProps} />\n  );\n}\n\nexport default ItemContainer;"]},"metadata":{},"sourceType":"module"}