{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/erxes/work/erxes-client-portal/client/components/user/containers/Register.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { gql, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { mutations } from \"../graphql\";\nimport Register from \"../components/Register\";\n\nfunction RegisterContainer(props) {\n  const [addUser, {\n    data,\n    error\n  }] = useMutation(gql(mutations.createUser));\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (data) {\n    window.location.href = '/';\n  }\n\n  const create = values => {\n    addUser({\n      variables: values\n    });\n  };\n\n  const updatedProps = _objectSpread(_objectSpread({}, props), {}, {\n    create\n  });\n\n  return /*#__PURE__*/_jsxDEV(Register, _objectSpread({}, updatedProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n\nexport default RegisterContainer;","map":{"version":3,"sources":["/home/erxes/work/erxes-client-portal/client/components/user/containers/Register.tsx"],"names":["gql","useMutation","React","mutations","Register","RegisterContainer","props","addUser","data","error","createUser","message","window","location","href","create","values","variables","updatedProps"],"mappings":";;;;;;;;;AAAA,SAASA,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT;AACA,OAAOC,QAAP;;AAIA,SAASC,iBAAT,CAA2BC,KAA3B,EAAyC;AACvC,QAAM,CAACC,OAAD,EAAU;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAV,IAA6BR,WAAW,CAACD,GAAG,CAACG,SAAS,CAACO,UAAX,CAAJ,CAA9C;;AAEA,MAAID,KAAJ,EAAW;AACT,wBAAO;AAAA,gBAAMA,KAAK,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIH,IAAJ,EAAU;AACRI,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD;;AAED,QAAMC,MAAM,GAAGC,MAAM,IAAI;AACvBT,IAAAA,OAAO,CAAC;AAAEU,MAAAA,SAAS,EAAED;AAAb,KAAD,CAAP;AACD,GAFD;;AAIA,QAAME,YAAY,mCACbZ,KADa;AAEhBS,IAAAA;AAFgB,IAAlB;;AAKA,sBAAO,QAAC,QAAD,oBAAcG,YAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,eAAeb,iBAAf","sourcesContent":["import { gql, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { mutations } from '../graphql';\nimport Register from '../components/Register';\n\ntype Props = {};\n\nfunction RegisterContainer(props: Props) {\n  const [addUser, { data, error }] = useMutation(gql(mutations.createUser));\n\n  if (error) {\n    return <div>{error.message}</div>;\n  }\n\n  if (data) {\n    window.location.href = '/';\n  }\n\n  const create = values => {\n    addUser({ variables: values });\n  };\n\n  const updatedProps = {\n    ...props,\n    create\n  };\n\n  return <Register {...updatedProps} />;\n}\n\nexport default RegisterContainer;\n"]},"metadata":{},"sourceType":"module"}