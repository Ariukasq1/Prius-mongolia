{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/erxes/work/client/components/main/containers/Header.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { gql, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { mutations } from \"../../user/graphql\";\nimport Header from \"../components/Header\";\n\nfunction HeaderContainer(props) {\n  _s();\n\n  const _useMutation = useMutation(gql(mutations.logout)),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        logout = _useMutation2[0],\n        _useMutation2$ = _useMutation2[1],\n        data = _useMutation2$.data,\n        error = _useMutation2$.error;\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (data) {\n    window.location.href = '/';\n  }\n\n  const updatedProps = _objectSpread(_objectSpread({}, props), {}, {\n    logout\n  });\n\n  return /*#__PURE__*/_jsxDEV(Header, _objectSpread({}, updatedProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n}\n\n_s(HeaderContainer, \"1mJc9l0RTQdJZI27NGqVfF2rNuo=\", false, function () {\n  return [useMutation];\n});\n\n_c = HeaderContainer;\nexport default HeaderContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderContainer\");","map":{"version":3,"sources":["/home/erxes/work/client/components/main/containers/Header.tsx"],"names":["gql","useMutation","React","mutations","Header","HeaderContainer","props","logout","data","error","message","window","location","href","updatedProps"],"mappings":";;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT;AACA,OAAOC,MAAP;;AASA,SAASC,eAAT,CAAyBC,KAAzB,EAAuC;AAAA;;AAAA,uBACHL,WAAW,CAACD,GAAG,CAACG,SAAS,CAACI,MAAX,CAAJ,CADR;AAAA;AAAA,QAC9BA,MAD8B;AAAA;AAAA,QACpBC,IADoB,kBACpBA,IADoB;AAAA,QACdC,KADc,kBACdA,KADc;;AAGrC,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA,gBAAMA,KAAK,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIF,IAAJ,EAAU;AACRG,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD;;AAED,QAAMC,YAAY,mCACbR,KADa;AAEhBC,IAAAA;AAFgB,IAAlB;;AAKA,sBAAO,QAAC,MAAD,oBAAYO,YAAZ;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAjBQT,e;UAC2BJ,W;;;KAD3BI,e;AAmBT,eAAeA,eAAf","sourcesContent":["import { gql, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { mutations } from '../../user/graphql';\nimport Header from '../components/Header';\nimport { Config, ICustomer, Topic } from '../../types';\n\ntype Props = {\n  config: Config;\n  topic: Topic;\n  currentUser?: ICustomer;\n};\n\nfunction HeaderContainer(props: Props) {\n  const [logout, { data, error }] = useMutation(gql(mutations.logout));\n\n  if (error) {\n    return <div>{error.message}</div>;\n  }\n\n  if (data) {\n    window.location.href = '/';\n  }\n\n  const updatedProps = {\n    ...props,\n    logout\n  };\n\n  return <Header {...updatedProps} />;\n}\n\nexport default HeaderContainer;\n"]},"metadata":{},"sourceType":"module"}