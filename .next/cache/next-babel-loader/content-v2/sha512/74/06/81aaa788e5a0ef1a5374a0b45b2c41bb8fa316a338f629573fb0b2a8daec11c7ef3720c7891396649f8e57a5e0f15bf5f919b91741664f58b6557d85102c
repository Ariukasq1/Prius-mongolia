{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/erxes/work/erxes-client-portal/client/components/knowledgeBase/containers/CategoryList.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { gql, useLazyQuery } from \"@apollo/client\";\nimport * as queries from \"../graphql/queries\";\nimport CategoryList from \"../components/CategoryList\";\nimport { AppConsumer } from \"../../appContext\";\nimport { useEffect } from \"react\";\n\nfunction CategoriesContainer({\n  topic\n}) {\n  const [fetchArticles, {\n    loading,\n    data = {}\n  }] = useLazyQuery(gql(queries.widgetsKnowledgeBaseArticles));\n  useEffect(() => {\n    if (topic._id) {\n      fetchArticles({\n        variables: {\n          topicId: topic._id,\n          searchString: \"\"\n        }\n      });\n    }\n  }, [topic]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  const {\n    widgetsKnowledgeBaseArticles = {}\n  } = data;\n  const articles = widgetsKnowledgeBaseArticles || [];\n  return /*#__PURE__*/_jsxDEV(CategoryList, {\n    topic: topic,\n    articles: articles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n\nconst WithConsumer = props => {\n  return /*#__PURE__*/_jsxDEV(AppConsumer, {\n    children: ({\n      topic\n    }) => {\n      return /*#__PURE__*/_jsxDEV(CategoriesContainer, _objectSpread(_objectSpread({}, props), {}, {\n        topic: topic\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\nexport default WithConsumer;","map":{"version":3,"sources":["/home/erxes/work/erxes-client-portal/client/components/knowledgeBase/containers/CategoryList.tsx"],"names":["React","gql","useLazyQuery","queries","CategoryList","AppConsumer","useEffect","CategoriesContainer","topic","fetchArticles","loading","data","widgetsKnowledgeBaseArticles","_id","variables","topicId","searchString","articles","WithConsumer","props"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,YAAd,QAAkC,gBAAlC;AACA,OAAO,KAAKC,OAAZ;AACA,OAAOC,YAAP;AACA,SAASC,WAAT;AAEA,SAASC,SAAT,QAA0B,OAA1B;;AAMA,SAASC,mBAAT,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAA+C;AAC7C,QAAM,CAACC,aAAD,EAAgB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,GAAG;AAAlB,GAAhB,IAA0CT,YAAY,CAC1DD,GAAG,CAACE,OAAO,CAACS,4BAAT,CADuD,CAA5D;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,KAAK,CAACK,GAAV,EAAe;AACbJ,MAAAA,aAAa,CAAC;AACZK,QAAAA,SAAS,EAAE;AACTC,UAAAA,OAAO,EAAEP,KAAK,CAACK,GADN;AAETG,UAAAA,YAAY,EAAE;AAFL;AADC,OAAD,CAAb;AAMD;AACF,GATQ,EASN,CAACR,KAAD,CATM,CAAT;;AAWA,MAAIE,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAM;AAAEE,IAAAA,4BAA4B,GAAG;AAAjC,MAAwCD,IAA9C;AACA,QAAMM,QAAQ,GAAGL,4BAA4B,IAAI,EAAjD;AAEA,sBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEJ,KAArB;AAA4B,IAAA,QAAQ,EAAES;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,sBACE,QAAC,WAAD;AAAA,cACG,CAAC;AAAEX,MAAAA;AAAF,KAAD,KAAiC;AAChC,0BAAO,QAAC,mBAAD,kCAAyBW,KAAzB;AAAgC,QAAA,KAAK,EAAEX;AAAvC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CARD;;AAUA,eAAeU,YAAf","sourcesContent":["import React from \"react\";\nimport { gql, useLazyQuery } from \"@apollo/client\";\nimport * as queries from \"../graphql/queries\";\nimport CategoryList from \"../components/CategoryList\";\nimport { AppConsumer } from \"../../appContext\";\nimport { Topic } from \"../../types\";\nimport { useEffect } from \"react\";\n\ntype Props = {\n  topic: Topic;\n};\n\nfunction CategoriesContainer({ topic }: Props) {\n  const [fetchArticles, { loading, data = {} }] = useLazyQuery(\n    gql(queries.widgetsKnowledgeBaseArticles)\n  );\n\n\n  useEffect(() => {\n    if (topic._id) {\n      fetchArticles({\n        variables: {\n          topicId: topic._id,\n          searchString: \"\",\n        },\n      });\n    }\n  }, [topic]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const { widgetsKnowledgeBaseArticles = {} } = data;\n  const articles = widgetsKnowledgeBaseArticles || [];\n\n  return <CategoryList topic={topic} articles={articles} />;\n}\n\nconst WithConsumer = (props) => {\n  return (\n    <AppConsumer>\n      {({ topic }: { topic: Topic }) => {\n        return <CategoriesContainer {...props} topic={topic} />;\n      }}\n    </AppConsumer>\n  );\n};\n\nexport default WithConsumer;\n"]},"metadata":{},"sourceType":"module"}