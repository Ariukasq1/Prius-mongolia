{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/erxes/work/erxes-client-portal/client/components/user/containers/Register.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { gql, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { mutations } from \"../graphql\";\nimport Register from \"../components/Register\";\n\nfunction TasksContainer(props) {\n  _s();\n\n  const [addUser, {\n    data,\n    error\n  }] = useMutation(gql(mutations.createUser));\n  console.log(error);\n\n  const create = doc => {\n    addUser({\n      variables: doc\n    });\n  };\n\n  const updatedProps = _objectSpread(_objectSpread({}, props), {}, {\n    create\n  });\n\n  return /*#__PURE__*/_jsxDEV(Register, _objectSpread({}, updatedProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TasksContainer, \"lbVLS41fqQaUvyHvXXVFgfk6L5I=\", false, function () {\n  return [useMutation];\n});\n\n_c = TasksContainer;\nexport default TasksContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksContainer\");","map":{"version":3,"sources":["/home/erxes/work/erxes-client-portal/client/components/user/containers/Register.tsx"],"names":["gql","useMutation","React","mutations","Register","TasksContainer","props","addUser","data","error","createUser","console","log","create","doc","variables","updatedProps"],"mappings":";;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT;AACA,OAAOC,QAAP;;AAIA,SAASC,cAAT,CAAwBC,KAAxB,EAAsC;AAAA;;AACpC,QAAM,CAACC,OAAD,EAAU;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAV,IAA6BR,WAAW,CAACD,GAAG,CAACG,SAAS,CAACO,UAAX,CAAJ,CAA9C;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAEA,QAAMI,MAAM,GAAGC,GAAG,IAAI;AACpBP,IAAAA,OAAO,CAAC;AAAEQ,MAAAA,SAAS,EAAED;AAAb,KAAD,CAAP;AACD,GAFD;;AAIA,QAAME,YAAY,mCACbV,KADa;AAEhBO,IAAAA;AAFgB,IAAlB;;AAKA,sBAAO,QAAC,QAAD,oBAAcG,YAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAfQX,c;UAC4BJ,W;;;KAD5BI,c;AAiBT,eAAeA,cAAf","sourcesContent":["import { gql, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { mutations } from '../graphql';\nimport Register from '../components/Register';\n\ntype Props = {};\n\nfunction TasksContainer(props: Props) {\n  const [addUser, { data, error }] = useMutation(gql(mutations.createUser));\n\n  console.log(error);\n\n  const create = doc => {\n    addUser({ variables: doc });\n  };\n\n  const updatedProps = {\n    ...props,\n    create\n  };\n\n  return <Register {...updatedProps} />;\n}\n\nexport default TasksContainer;\n"]},"metadata":{},"sourceType":"module"}