{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/erxes/work/erxes-client-portal/client/components/common/Modal.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport Icon from \"./Icon\";\n\nclass ModalTrigger extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"openModal\", () => {\n      this.setState({\n        isOpen: true\n      });\n    });\n\n    _defineProperty(this, \"closeModal\", () => {\n      this.setState({\n        isOpen: false\n      });\n    });\n\n    _defineProperty(this, \"renderHeader\", () => {\n      if (this.props.hideHeader) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: this.closeModal,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this);\n      }\n\n      const {\n        title\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this);\n    });\n\n    this.state = {\n      isOpen: props.isOpen || false,\n      autoOpenKey: ''\n    };\n  }\n\n  render() {\n    const {\n      trigger,\n      size,\n      content,\n      backDrop,\n      enforceFocus,\n      onExit,\n      centered,\n      isAnimate = false\n    } = this.props;\n    const {\n      isOpen\n    } = this.state; // add onclick event to the trigger component\n\n    const triggerComponent = trigger ? /*#__PURE__*/React.cloneElement(trigger, {\n      onClick: this.openModal\n    }) : null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [triggerComponent, /*#__PURE__*/_jsxDEV(Modal, {\n        size: size,\n        show: isOpen,\n        onHide: this.closeModal,\n        backdrop: backDrop,\n        enforceFocus: enforceFocus,\n        onExit: onExit,\n        animation: isAnimate,\n        centered: centered,\n        children: [this.renderHeader(), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: content({\n            closeModal: this.closeModal\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ModalTrigger;","map":{"version":3,"sources":["/home/erxes/work/erxes-client-portal/client/components/common/Modal.tsx"],"names":["React","Modal","Icon","ModalTrigger","Component","constructor","props","setState","isOpen","hideHeader","closeModal","title","state","autoOpenKey","render","trigger","size","content","backDrop","enforceFocus","onExit","centered","isAnimate","triggerComponent","cloneElement","onClick","openModal","renderHeader"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,IAAP;;AAsBA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAAyD;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,uCASP,MAAM;AAChB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KAXkB;;AAAA,wCAaN,MAAM;AACjB,WAAKD,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KAfkB;;AAAA,0CAiBJ,MAAM;AACnB,UAAI,KAAKF,KAAL,CAAWG,UAAf,EAA2B;AACzB,4BACE;AAAK,UAAA,OAAO,EAAE,KAAKC,UAAnB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;;AAED,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKL,KAAvB;AAEA,0BACE,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,EAAE,IAA3B;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAA,oBAAcK;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAjCkB;;AAGjB,SAAKC,KAAL,GAAa;AACXJ,MAAAA,MAAM,EAAEF,KAAK,CAACE,MAAN,IAAgB,KADb;AAEXK,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AA4BDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,OADI;AAEJC,MAAAA,IAFI;AAGJC,MAAAA,OAHI;AAIJC,MAAAA,QAJI;AAKJC,MAAAA,YALI;AAMJC,MAAAA,MANI;AAOJC,MAAAA,QAPI;AAQJC,MAAAA,SAAS,GAAG;AARR,QASF,KAAKhB,KATT;AAWA,UAAM;AAAEE,MAAAA;AAAF,QAAa,KAAKI,KAAxB,CAZO,CAcP;;AACA,UAAMW,gBAAgB,GAAGR,OAAO,gBAC5Bf,KAAK,CAACwB,YAAN,CAAmBT,OAAnB,EAAuD;AACrDU,MAAAA,OAAO,EAAE,KAAKC;AADuC,KAAvD,CAD4B,GAI5B,IAJJ;AAMA,wBACE;AAAA,iBACGH,gBADH,eAGE,QAAC,KAAD;AACE,QAAA,IAAI,EAAEP,IADR;AAEE,QAAA,IAAI,EAAER,MAFR;AAGE,QAAA,MAAM,EAAE,KAAKE,UAHf;AAIE,QAAA,QAAQ,EAAEQ,QAJZ;AAKE,QAAA,YAAY,EAAEC,YALhB;AAME,QAAA,MAAM,EAAEC,MANV;AAOE,QAAA,SAAS,EAAEE,SAPb;AAQE,QAAA,QAAQ,EAAED,QARZ;AAAA,mBAUG,KAAKM,YAAL,EAVH,eAWE,QAAC,KAAD,CAAO,IAAP;AAAA,oBAAaV,OAAO,CAAC;AAAEP,YAAAA,UAAU,EAAE,KAAKA;AAAnB,WAAD;AAApB;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,oBADF;AAmBD;;AA5EsD;;AA+EzD,eAAeP,YAAf","sourcesContent":["import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport Icon from './Icon';\n\ntype Props = {\n  title: string;\n  trigger?: React.ReactNode;\n  autoOpenKey?: string;\n  content: ({ closeModal }: { closeModal: () => void }) => React.ReactNode;\n  size?: 'sm' | 'lg' | 'xl';\n  backDrop?: 'static' | boolean;\n  enforceFocus?: boolean;\n  hideHeader?: boolean;\n  isOpen?: boolean;\n  centered?: boolean;\n  onExit?: () => void;\n  isAnimate?: boolean;\n};\n\ntype State = {\n  isOpen?: boolean;\n  autoOpenKey?: string;\n};\n\nclass ModalTrigger extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: props.isOpen || false,\n      autoOpenKey: ''\n    };\n  }\n\n  openModal = () => {\n    this.setState({ isOpen: true });\n  };\n\n  closeModal = () => {\n    this.setState({ isOpen: false });\n  };\n\n  renderHeader = () => {\n    if (this.props.hideHeader) {\n      return (\n        <div onClick={this.closeModal}>\n          <Icon icon=\"times\" />\n        </div>\n      );\n    }\n\n    const { title } = this.props;\n\n    return (\n      <Modal.Header closeButton={true}>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n    );\n  };\n\n  render() {\n    const {\n      trigger,\n      size,\n      content,\n      backDrop,\n      enforceFocus,\n      onExit,\n      centered,\n      isAnimate = false\n    } = this.props;\n\n    const { isOpen } = this.state;\n\n    // add onclick event to the trigger component\n    const triggerComponent = trigger\n      ? React.cloneElement(trigger as React.ReactElement<any>, {\n          onClick: this.openModal\n        })\n      : null;\n\n    return (\n      <>\n        {triggerComponent}\n\n        <Modal\n          size={size}\n          show={isOpen}\n          onHide={this.closeModal}\n          backdrop={backDrop}\n          enforceFocus={enforceFocus}\n          onExit={onExit}\n          animation={isAnimate}\n          centered={centered}\n        >\n          {this.renderHeader()}\n          <Modal.Body>{content({ closeModal: this.closeModal })}</Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default ModalTrigger;\n"]},"metadata":{},"sourceType":"module"}