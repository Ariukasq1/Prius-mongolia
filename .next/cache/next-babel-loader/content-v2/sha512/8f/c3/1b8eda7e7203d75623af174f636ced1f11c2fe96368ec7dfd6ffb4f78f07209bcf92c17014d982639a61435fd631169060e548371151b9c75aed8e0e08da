{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/erxes/work/erxes-client-portal/client/components/main/containers/Layout.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { gql, useQuery } from '@apollo/client';\nimport React from 'react';\nimport Head from 'next/head';\nimport DumbLayout from \"../components/Layout\";\nimport AppProvider, { AppConsumer } from \"../../appContext\";\nimport { currentUser as currentUserQuery } from \"../../user/graphql/queries\";\n\nfunction Layout(_ref) {\n  let {\n    topic,\n    config = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"topic\", \"config\"]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"shortcut icon\",\n        href: config.icon || '',\n        type: \"image/x-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DumbLayout, _objectSpread(_objectSpread({}, props), {}, {\n      config: config,\n      topic: topic\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nconst WithConsumer = props => {\n  const {\n    data = {}\n  } = useQuery(gql(currentUserQuery));\n  const currentUser = data.currentUser;\n  return /*#__PURE__*/_jsxDEV(AppProvider, {\n    currentUser: currentUser,\n    children: /*#__PURE__*/_jsxDEV(AppConsumer, {\n      children: ({\n        config,\n        topic\n      }) => {\n        return /*#__PURE__*/_jsxDEV(Layout, _objectSpread(_objectSpread({}, props), {}, {\n          config: config,\n          topic: topic,\n          currentUser: currentUser\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\nexport default WithConsumer;","map":{"version":3,"sources":["/home/erxes/work/erxes-client-portal/client/components/main/containers/Layout.tsx"],"names":["gql","useQuery","React","Head","DumbLayout","AppProvider","AppConsumer","currentUser","currentUserQuery","Layout","topic","config","props","icon","WithConsumer","data"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP,IAAsBC,WAAtB;AAEA,SAASC,WAAW,IAAIC,gBAAxB;;AASA,SAASC,MAAT,OAAyD;AAAA,MAAzC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAM,GAAG;AAAlB,GAAyC;AAAA,MAAhBC,KAAgB;;AACvD,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AACE,QAAA,GAAG,EAAC,eADN;AAEE,QAAA,IAAI,EAAED,MAAM,CAACE,IAAP,IAAe,EAFvB;AAGE,QAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,UAAD,kCAAgBD,KAAhB;AAAuB,MAAA,MAAM,EAAED,MAA/B;AAAuC,MAAA,KAAK,EAAED;AAA9C;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAYD;;AAED,MAAMI,YAAY,GAAGF,KAAK,IAAI;AAC5B,QAAM;AAAEG,IAAAA,IAAI,GAAG;AAAT,MAAgBd,QAAQ,CAACD,GAAG,CAACQ,gBAAD,CAAJ,CAA9B;AACA,QAAMD,WAAW,GAAGQ,IAAI,CAACR,WAAzB;AAEA,sBACE,QAAC,WAAD;AAAa,IAAA,WAAW,EAAEA,WAA1B;AAAA,2BACE,QAAC,WAAD;AAAA,gBACG,CAAC;AAAEI,QAAAA,MAAF;AAAUD,QAAAA;AAAV,OAAD,KAAwD;AACvD,4BACE,QAAC,MAAD,kCACME,KADN;AAEE,UAAA,MAAM,EAAED,MAFV;AAGE,UAAA,KAAK,EAAED,KAHT;AAIE,UAAA,WAAW,EAAEH;AAJf;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CApBD;;AAsBA,eAAeO,YAAf","sourcesContent":["import { gql, useQuery } from '@apollo/client';\nimport React from 'react';\nimport Head from 'next/head';\nimport DumbLayout from '../components/Layout';\nimport AppProvider, { AppConsumer } from '../../appContext';\nimport { Config, Topic, ICustomer } from '../../types';\nimport { currentUser as currentUserQuery } from '../../user/graphql/queries';\n\ntype Props = {\n  children: React.ReactNode;\n  config: Config;\n  topic: Topic;\n  currentUser?: ICustomer;\n};\n\nfunction Layout({ topic, config = {}, ...props }: Props) {\n  return (\n    <>\n      <Head>\n        <link\n          rel=\"shortcut icon\"\n          href={config.icon || ''}\n          type=\"image/x-icon\"\n        />\n      </Head>\n      <DumbLayout {...props} config={config} topic={topic} />\n    </>\n  );\n}\n\nconst WithConsumer = props => {\n  const { data = {} } = useQuery(gql(currentUserQuery));\n  const currentUser = data.currentUser;\n\n  return (\n    <AppProvider currentUser={currentUser}>\n      <AppConsumer>\n        {({ config, topic }: { config?: Config; topic: any }) => {\n          return (\n            <Layout\n              {...props}\n              config={config}\n              topic={topic}\n              currentUser={currentUser}\n            />\n          );\n        }}\n      </AppConsumer>\n    </AppProvider>\n  );\n};\n\nexport default WithConsumer;\n"]},"metadata":{},"sourceType":"module"}